# Class Display is based on:
#   https://raw.githubusercontent.com/elecfreaks/circuitpython_picoed/main/picoed/display.py
#   Copyright (c) 2022 ELECFREAKS


class Image:
    """An image to show on the Pico:ed V2 LED display."""

    NO = b"\x00\x00\x00\x00\x00\x41\x22\x14\x08\x14\x22\x41\x00\x00\x00\x00\x00"
    SQUARE = b"\x00\x00\x00\x00\x00\x00\x3E\x22\x22\x22\x3E\x00\x00\x00\x00\x00\x00"
    RECTANGLE = b"\xFF\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\xFF"
    RHOMBUS = b"\x00\x00\x00\x00\x00\x08\x14\x22\x41\x22\x14\x08\x00\x00\x00\x00\x00"
    TARGET = b"\x00\x00\x00\x00\x00\x08\x1C\x36\x63\x36\x1C\x08\x00\x00\x00\x00\x00"
    CHESSBOARD = b"\x2A\x55\x2A\x55\x2A\x55\x2A\x55\x2A\x55\x2A\x55\x2A\x55\x2A\x55\x2A"
    HAPPY = b"\x00\x00\x00\x00\x10\x20\x46\x40\x40\x40\x46\x20\x10\x00\x00\x00\x00"
    SAD = b"\x00\x00\x00\x00\x40\x22\x12\x10\x10\x10\x12\x22\x40\x00\x00\x00\x00"
    YES = b"\x00\x00\x00\x00\x00\x00\x08\x10\x20\x10\x08\x04\x02\x00\x00\x00\x00"
    HEART = b"\x00\x00\x00\x00\x00\x0E\x1F\x3F\x7E\x3F\x1F\x0E\x00\x00\x00\x00\x00"
    TRIANGLE = b"\x00\x00\x40\x60\x50\x48\x44\x42\x41\x42\x44\x48\x50\x60\x40\x00\x00"
    CHAGRIN = b"\x00\x00\x00\x00\x22\x14\x08\x40\x40\x40\x08\x14\x22\x00\x00\x00\x00"
    SMILING_FACE = b"\x00\x00\x00\x00\x00\x06\x36\x50\x50\x50\x36\x06\x00\x00\x00\x00\x00"
    CRY = b"\x60\x70\x70\x38\x02\x02\x64\x50\x50\x50\x64\x02\x02\x38\x70\x70\x60"
    DOWNCAST = b"\x00\x00\x00\x02\x0A\x11\x08\x40\x40\x40\x08\x11\x0A\x02\x00\x00\x00"
    LOOK_RIGHT = b"\x00\x00\x00\x00\x00\x00\x00\x26\x2F\x06\x00\x06\x0F\x06\x00\x00\x00"
    LOOK_LEFT = b"\x00\x00\x00\x06\x0F\x06\x00\x06\x2F\x26\x00\x00\x00\x00\x00\x00\x00"
    TONGUE = b"\x00\x00\x00\x00\x04\x12\x14\x70\x70\x70\x16\x16\x00\x00\x00\x00\x00"
    PEEK_RIGHT = b"\x00\x00\x04\x04\x04\x0C\x0C\x40\x40\x40\x04\x04\x04\x0C\x0C\x00\x00"
    PEEK_LEFT = b"\x00\x00\x0C\x0C\x04\x04\x04\x40\x40\x40\x0C\x0C\x04\x04\x04\x00\x00"
    TEAR_EYES = b"\x00\x00\x00\x06\x7F\x06\x20\x40\x40\x40\x20\x06\x7F\x06\x00\x00\x00"
    PROUD = b"\x01\x07\x0F\x0F\x0F\x0F\x47\x41\x41\x41\x27\x0F\x0F\x0F\x0F\x07\x01"
    SNEER_LEFT = b"\x00\x00\x00\x0C\x08\x0C\x2C\x40\x40\x40\x2C\x08\x0C\x0C\x00\x00\x00"
    SNEER_RIGHT = b"\x00\x00\x00\x0C\x0C\x08\x2C\x40\x40\x40\x2C\x0C\x08\x0C\x00\x00\x00"
    SUPERCILIOUS_LOOK = b"\x00\x00\x00\x0E\x0C\x0E\x00\x20\x20\x20\x00\x0E\x0C\x0E\x00\x00\x00"
    EXCITED = b"\x60\x70\x70\x3E\x01\x06\x30\x50\x50\x50\x30\x06\x01\x3E\x70\x70\x60"

    def __new__(cls, value=None):
        if value is not None and isinstance(value, str):
            data = []
            for y in range(7):
                if y < 6:
                    if value[(y + 1) * 18 - 1] != ":":
                        raise ValueError('Each line of data must be separated with a ":"')
                for x in range(17):
                    data.append([x, y, int(value[y * 18 + x])])
            return data
        else:
            return [[0, 0, 0]]
